{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supri\\\\Desktop\\\\rentify-frontend\\\\src\\\\components\\\\OngoingJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport \"./AllJobPosts.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OngoingJobs = () => {\n  _s();\n  const [jobPosts, setJobPosts] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/get_jobs_for_user/\", {\n          params: {\n            user_id: localStorage.getItem(\"user_id\")\n          }\n        });\n        setJobPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      }\n    };\n    fetchJobs();\n  }, []);\n\n  // Function to get the image URL based on the name_of_work\n  const getImageUrl = nameOfWork => {\n    try {\n      return require(`./img/Sector_jobs/${nameOfWork}.png`);\n    } catch (error) {\n      return require(\"./img/jobPost.jpg\");\n    }\n  };\n  const handleJobClick = jobId => {\n    history.push(`/apply_job_details/${jobId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ongoing Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: jobPosts.length === 0 ?\n      /*#__PURE__*/\n      // Check if jobPosts array is empty\n      _jsxDEV(\"div\", {\n        className: \"noJobsMessage\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Currently there are no ongoing jobs.\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/all_jobs\",\n            children: \"Click here to apply for jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : jobPosts.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item\",\n        onClick: () => handleJobClick(job.job_id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImageUrl(job.name_of_work),\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: job.job_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Due Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), \" \", job.due_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Application Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this), \" \", job.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Work Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), \" \", job.work_status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, job.job_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(OngoingJobs, \"uBe4tVNIWtRvPWfDJP+Tv5pDTBw=\", false, function () {\n  return [useHistory];\n});\n_c = OngoingJobs;\nexport default OngoingJobs;\nvar _c;\n$RefreshReg$(_c, \"OngoingJobs\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","Link","axios","jsxDEV","_jsxDEV","OngoingJobs","_s","jobPosts","setJobPosts","history","fetchJobs","response","get","params","user_id","localStorage","getItem","data","error","console","getImageUrl","nameOfWork","require","handleJobClick","jobId","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","to","map","job","onClick","job_id","src","name_of_work","alt","job_name","due_date","status","work_status","_c","$RefreshReg$"],"sources":["C:/Users/supri/Desktop/rentify-frontend/src/components/OngoingJobs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./AllJobPosts.css\";\r\nimport axios from \"axios\";\r\n\r\nconst OngoingJobs = () => {\r\n  const [jobPosts, setJobPosts] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:8000/api/get_jobs_for_user/\",\r\n          {\r\n            params: {\r\n              user_id: localStorage.getItem(\"user_id\"),\r\n            },\r\n          }\r\n        );\r\n        setJobPosts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  // Function to get the image URL based on the name_of_work\r\n  const getImageUrl = (nameOfWork) => {\r\n    try {\r\n      return require(`./img/Sector_jobs/${nameOfWork}.png`);\r\n    } catch (error) {\r\n      return require(\"./img/jobPost.jpg\");\r\n    }\r\n  };\r\n\r\n  const handleJobClick = (jobId) => {\r\n    history.push(`/apply_job_details/${jobId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Ongoing Jobs</h1>\r\n      <div className=\"card-list\">\r\n        {jobPosts.length === 0 ? ( // Check if jobPosts array is empty\r\n          <div className=\"noJobsMessage\">\r\n            <p>\r\n              Currently there are no ongoing jobs.{\" \"}\r\n              <Link to=\"/all_jobs\">Click here to apply for jobs</Link>\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          jobPosts.map((job) => (\r\n            <div\r\n              className=\"card-item\"\r\n              key={job.job_id}\r\n              onClick={() => handleJobClick(job.job_id)}\r\n            >\r\n              <img src={getImageUrl(job.name_of_work)} alt=\"Profile\" />\r\n              <div className=\"card-content\">\r\n                <h3>{job.job_name}</h3>\r\n                <p>\r\n                  <strong>Due Date:</strong> {job.due_date}\r\n                </p>\r\n                <p>\r\n                  <strong>Application Status:</strong> {job.status}\r\n                </p>\r\n                <p>\r\n                  <strong>Work Status:</strong> {job.work_status}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OngoingJobs;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,IAAI,QAAQ,kBAAkB;AACnD,OAAO,mBAAmB;AAC1B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5BF,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC9B,8CAA8C,EAC9C;UACEC,MAAM,EAAE;YACNC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,SAAS;UACzC;QACF,CACF,CAAC;QACDR,WAAW,CAACG,QAAQ,CAACM,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,WAAW,GAAIC,UAAU,IAAK;IAClC,IAAI;MACF,OAAOC,OAAO,CAAC,qBAAqBD,UAAU,MAAM,CAAC;IACvD,CAAC,CAAC,OAAOH,KAAK,EAAE;MACd,OAAOI,OAAO,CAAC,mBAAmB,CAAC;IACrC;EACF,CAAC;EAED,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChCf,OAAO,CAACgB,IAAI,CAAC,sBAAsBD,KAAK,EAAE,CAAC;EAC7C,CAAC;EAED,oBACEpB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA;MAAAuB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB3B,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBpB,QAAQ,CAACyB,MAAM,KAAK,CAAC;MAAA;MAAK;MACzB5B,OAAA;QAAKsB,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BvB,OAAA;UAAAuB,QAAA,GAAG,sCACmC,EAAC,GAAG,eACxCvB,OAAA,CAACH,IAAI;YAACgC,EAAE,EAAC,WAAW;YAAAN,QAAA,EAAC;UAA4B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,GAENxB,QAAQ,CAAC2B,GAAG,CAAEC,GAAG,iBACf/B,OAAA;QACEsB,SAAS,EAAC,WAAW;QAErBU,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACY,GAAG,CAACE,MAAM,CAAE;QAAAV,QAAA,gBAE1CvB,OAAA;UAAKkC,GAAG,EAAElB,WAAW,CAACe,GAAG,CAACI,YAAY,CAAE;UAACC,GAAG,EAAC;QAAS;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzD3B,OAAA;UAAKsB,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BvB,OAAA;YAAAuB,QAAA,EAAKQ,GAAG,CAACM;UAAQ;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvB3B,OAAA;YAAAuB,QAAA,gBACEvB,OAAA;cAAAuB,QAAA,EAAQ;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACI,GAAG,CAACO,QAAQ;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACJ3B,OAAA;YAAAuB,QAAA,gBACEvB,OAAA;cAAAuB,QAAA,EAAQ;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACI,GAAG,CAACQ,MAAM;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eACJ3B,OAAA;YAAAuB,QAAA,gBACEvB,OAAA;cAAAuB,QAAA,EAAQ;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACI,GAAG,CAACS,WAAW;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA,GAfDI,GAAG,CAACE,MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBZ,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1EID,WAAW;EAAA,QAECL,UAAU;AAAA;AAAA6C,EAAA,GAFtBxC,WAAW;AA4EjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}