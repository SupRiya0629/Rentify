{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\supri\\\\Desktop\\\\rentify-frontend\\\\src\\\\components\\\\PostedJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\"; // Import Link and useHistory from React Router\nimport \"./PostedJobs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostedJobs = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const user_id = localStorage.getItem(\"user_id\");\n  const history = useHistory(); // Initialize useHistory hook\n\n  useEffect(() => {\n    const fetchPostedJobs = async () => {\n      try {\n        if (!user_id) {\n          console.error(\"User ID not found in local storage\");\n          return;\n        }\n        const response = await fetch(`http://localhost:8000/api/posted_by_user/?user_management_id=${user_id}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setJobs(data.jobs);\n      } catch (error) {\n        console.error(\"Error fetching posted jobs:\", error);\n      }\n    };\n    fetchPostedJobs();\n  }, [user_id]);\n  const handleDeleteJob = async jobId => {\n    if (window.confirm(\"Are you sure you want to delete this job?\")) {\n      try {\n        const response = await fetch(`http://localhost:8000/api/delete_job/?job_id=${jobId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        // Update the job list after deletion\n        const updatedJobs = jobs.filter(job => job.job_id !== jobId);\n        setJobs(updatedJobs);\n      } catch (error) {\n        console.error(\"Error deleting job:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JobPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posted Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createpost\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/post_job\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \" Create Job Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), jobs.length === 0 ?\n    /*#__PURE__*/\n    // Check if jobs array is empty\n    _jsxDEV(\"div\", {\n      className: \"noJobsMessage\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You haven't created any Jobs yet. Please\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => history.push(\"/post_job\"),\n          children: \"click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), \" to Post a Job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobpost\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: job.name_of_work\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.type_of_sector\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/get_user_by_job/${job.job_id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ap\",\n            children: \"Application Requests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/view_job/${job.job_id}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"v\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"d\",\n          onClick: () => handleDeleteJob(job.job_id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(PostedJobs, \"NgION2rPDF6ijIIeSDRwk0m+O6c=\", false, function () {\n  return [useHistory];\n});\n_c = PostedJobs;\nexport default PostedJobs;\nvar _c;\n$RefreshReg$(_c, \"PostedJobs\");","map":{"version":3,"names":["React","useState","useEffect","Link","useHistory","jsxDEV","_jsxDEV","PostedJobs","_s","jobs","setJobs","user_id","localStorage","getItem","history","fetchPostedJobs","console","error","response","fetch","ok","Error","status","data","json","handleDeleteJob","jobId","window","confirm","updatedJobs","filter","job","job_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","onClick","push","map","index","name_of_work","type_of_sector","_c","$RefreshReg$"],"sources":["C:/Users/supri/Desktop/rentify-frontend/src/components/PostedJobs.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\"; // Import Link and useHistory from React Router\r\nimport \"./PostedJobs.css\";\r\n\r\nconst PostedJobs = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const user_id = localStorage.getItem(\"user_id\");\r\n  const history = useHistory(); // Initialize useHistory hook\r\n\r\n  useEffect(() => {\r\n    const fetchPostedJobs = async () => {\r\n      try {\r\n        if (!user_id) {\r\n          console.error(\"User ID not found in local storage\");\r\n          return;\r\n        }\r\n\r\n        const response = await fetch(\r\n          `http://localhost:8000/api/posted_by_user/?user_management_id=${user_id}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setJobs(data.jobs);\r\n      } catch (error) {\r\n        console.error(\"Error fetching posted jobs:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPostedJobs();\r\n  }, [user_id]);\r\n\r\n  const handleDeleteJob = async (jobId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this job?\")) {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:8000/api/delete_job/?job_id=${jobId}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        // Update the job list after deletion\r\n        const updatedJobs = jobs.filter((job) => job.job_id !== jobId);\r\n        setJobs(updatedJobs);\r\n      } catch (error) {\r\n        console.error(\"Error deleting job:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"JobPosts\">\r\n      <h1>Posted Jobs</h1>\r\n      <div className=\"createpost\">\r\n        <Link to=\"/post_job\">\r\n          <button>\r\n            <i className=\"fas fa-plus\"></i> Create Job Post\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      {jobs.length === 0 ? ( // Check if jobs array is empty\r\n        <div className=\"noJobsMessage\">\r\n          <p>\r\n            You haven't created any Jobs yet. Please{\" \"}\r\n            <span onClick={() => history.push(\"/post_job\")}>click here</span> to\r\n            Post a Job\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        jobs.map((job, index) => (\r\n          <div className=\"jobpost\" key={index}>\r\n            {/* Wrap the job details in a Link component */}\r\n            <div className=\"details\">\r\n              <h1>{job.name_of_work}</h1>\r\n              <h3>{job.type_of_sector}</h3>\r\n            </div>\r\n\r\n            <div className=\"btn\">\r\n              <Link to={`/get_user_by_job/${job.job_id}`}>\r\n                <button className=\"ap\">Application Requests</button>\r\n              </Link>\r\n              <Link to={`/view_job/${job.job_id}`}>\r\n                {/* Pass job_id as part of the route path */}\r\n                <button className=\"v\">View</button>\r\n              </Link>\r\n\r\n              <button className=\"d\" onClick={() => handleDeleteJob(job.job_id)}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostedJobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}