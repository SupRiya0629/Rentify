{"ast":null,"code":"import axios from \"axios\";\n\n// Update the URL endpoint according to your Django project\nconst backendURL = \"http://localhost:8000/api/\";\nexport const sendDataToBackend = async (endpoints, formData) => {\n  try {\n    // Step 1: Create UserManagement\n    const responseUserManagement = await axios.post(`${backendURL}${endpoints.userManagement}`, formData.userManagement);\n    const userManagementId = responseUserManagement.data.user_id;\n    console.log(responseUserManagement.data);\n\n    // Step 2: Use the obtained userManagementId to create UserDetails\n    const userDetailsData = {\n      name: formData.userDetails.name,\n      gender: formData.userDetails.gender,\n      phone: formData.userDetails.phone,\n      email: formData.userDetails.email,\n      address: formData.userDetails.address,\n      user_management: userManagementId\n    };\n    await axios.post(`${backendURL}${endpoints.userDetails}`, userDetailsData);\n\n    // Step 3: Use the obtained userManagementId to create UserSkills\n    const userSkillsData = {\n      skill_category: formData.userSkills.skill_category,\n      job_details: formData.userSkills.job_details,\n      has_work_experience: formData.userSkills.has_work_experience,\n      workplace: formData.userSkills.workplace,\n      position: formData.userSkills.position,\n      duration: formData.userSkills.duration,\n      user_management: userManagementId\n    };\n    await axios.post(`${backendURL}${endpoints.userSkills}`, userSkillsData);\n    console.log(\"Data sent successfully\");\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error(\"Server responded with an error:\", error.response.data);\n\n      // Extract and return specific error messages\n      const {\n        username\n      } = error.response.data;\n      if (username && username[0] === \"user management with this username already exists.\") {\n        console.error(\"Username already exists. Choose another one.\");\n        return \"Username already exists. Choose another one.\";\n      } else {\n        console.error(\"Unknown error. Please try again.\");\n        return \"Unknown error. Please try again.\";\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error(\"No response received from the server:\", error.request);\n      return \"No response received from the server. Please try again.\";\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error(\"Error setting up the request:\", error.message);\n      return \"Error setting up the request. Please try again.\";\n    }\n  }\n};","map":{"version":3,"names":["axios","backendURL","sendDataToBackend","endpoints","formData","responseUserManagement","post","userManagement","userManagementId","data","user_id","console","log","userDetailsData","name","userDetails","gender","phone","email","address","user_management","userSkillsData","skill_category","userSkills","job_details","has_work_experience","workplace","position","duration","error","response","username","request","message"],"sources":["C:/Users/supri/Desktop/rentify-frontend/src/components/backend.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Update the URL endpoint according to your Django project\r\nconst backendURL = \"http://localhost:8000/api/\";\r\n\r\nexport const sendDataToBackend = async (endpoints, formData) => {\r\n  try {\r\n    // Step 1: Create UserManagement\r\n    const responseUserManagement = await axios.post(\r\n      `${backendURL}${endpoints.userManagement}`,\r\n      formData.userManagement\r\n    );\r\n    const userManagementId = responseUserManagement.data.user_id;\r\n    console.log(responseUserManagement.data);\r\n\r\n    // Step 2: Use the obtained userManagementId to create UserDetails\r\n    const userDetailsData = {\r\n      name: formData.userDetails.name,\r\n      gender: formData.userDetails.gender,\r\n      phone: formData.userDetails.phone,\r\n      email: formData.userDetails.email,\r\n      address: formData.userDetails.address,\r\n      user_management: userManagementId,\r\n    };\r\n    await axios.post(`${backendURL}${endpoints.userDetails}`, userDetailsData);\r\n\r\n    // Step 3: Use the obtained userManagementId to create UserSkills\r\n    const userSkillsData = {\r\n      skill_category: formData.userSkills.skill_category,\r\n      job_details: formData.userSkills.job_details,\r\n      has_work_experience: formData.userSkills.has_work_experience,\r\n      workplace: formData.userSkills.workplace,\r\n      position: formData.userSkills.position,\r\n      duration: formData.userSkills.duration,\r\n      user_management: userManagementId,\r\n    };\r\n    await axios.post(`${backendURL}${endpoints.userSkills}`, userSkillsData);\r\n\r\n    console.log(\"Data sent successfully\");\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error(\"Server responded with an error:\", error.response.data);\r\n\r\n      // Extract and return specific error messages\r\n      const { username } = error.response.data;\r\n      if (\r\n        username &&\r\n        username[0] === \"user management with this username already exists.\"\r\n      ) {\r\n        console.error(\"Username already exists. Choose another one.\");\r\n        return \"Username already exists. Choose another one.\";\r\n      } else {\r\n        console.error(\"Unknown error. Please try again.\");\r\n        return \"Unknown error. Please try again.\";\r\n      }\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error(\"No response received from the server:\", error.request);\r\n      return \"No response received from the server. Please try again.\";\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error(\"Error setting up the request:\", error.message);\r\n      return \"Error setting up the request. Please try again.\";\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,UAAU,GAAG,4BAA4B;AAE/C,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,KAAK;EAC9D,IAAI;IACF;IACA,MAAMC,sBAAsB,GAAG,MAAML,KAAK,CAACM,IAAI,CAC7C,GAAGL,UAAU,GAAGE,SAAS,CAACI,cAAc,EAAE,EAC1CH,QAAQ,CAACG,cACX,CAAC;IACD,MAAMC,gBAAgB,GAAGH,sBAAsB,CAACI,IAAI,CAACC,OAAO;IAC5DC,OAAO,CAACC,GAAG,CAACP,sBAAsB,CAACI,IAAI,CAAC;;IAExC;IACA,MAAMI,eAAe,GAAG;MACtBC,IAAI,EAAEV,QAAQ,CAACW,WAAW,CAACD,IAAI;MAC/BE,MAAM,EAAEZ,QAAQ,CAACW,WAAW,CAACC,MAAM;MACnCC,KAAK,EAAEb,QAAQ,CAACW,WAAW,CAACE,KAAK;MACjCC,KAAK,EAAEd,QAAQ,CAACW,WAAW,CAACG,KAAK;MACjCC,OAAO,EAAEf,QAAQ,CAACW,WAAW,CAACI,OAAO;MACrCC,eAAe,EAAEZ;IACnB,CAAC;IACD,MAAMR,KAAK,CAACM,IAAI,CAAC,GAAGL,UAAU,GAAGE,SAAS,CAACY,WAAW,EAAE,EAAEF,eAAe,CAAC;;IAE1E;IACA,MAAMQ,cAAc,GAAG;MACrBC,cAAc,EAAElB,QAAQ,CAACmB,UAAU,CAACD,cAAc;MAClDE,WAAW,EAAEpB,QAAQ,CAACmB,UAAU,CAACC,WAAW;MAC5CC,mBAAmB,EAAErB,QAAQ,CAACmB,UAAU,CAACE,mBAAmB;MAC5DC,SAAS,EAAEtB,QAAQ,CAACmB,UAAU,CAACG,SAAS;MACxCC,QAAQ,EAAEvB,QAAQ,CAACmB,UAAU,CAACI,QAAQ;MACtCC,QAAQ,EAAExB,QAAQ,CAACmB,UAAU,CAACK,QAAQ;MACtCR,eAAe,EAAEZ;IACnB,CAAC;IACD,MAAMR,KAAK,CAACM,IAAI,CAAC,GAAGL,UAAU,GAAGE,SAAS,CAACoB,UAAU,EAAE,EAAEF,cAAc,CAAC;IAExEV,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACd,IAAIA,KAAK,CAACC,QAAQ,EAAE;MAClB;MACA;MACAnB,OAAO,CAACkB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACC,QAAQ,CAACrB,IAAI,CAAC;;MAErE;MACA,MAAM;QAAEsB;MAAS,CAAC,GAAGF,KAAK,CAACC,QAAQ,CAACrB,IAAI;MACxC,IACEsB,QAAQ,IACRA,QAAQ,CAAC,CAAC,CAAC,KAAK,oDAAoD,EACpE;QACApB,OAAO,CAACkB,KAAK,CAAC,8CAA8C,CAAC;QAC7D,OAAO,8CAA8C;MACvD,CAAC,MAAM;QACLlB,OAAO,CAACkB,KAAK,CAAC,kCAAkC,CAAC;QACjD,OAAO,kCAAkC;MAC3C;IACF,CAAC,MAAM,IAAIA,KAAK,CAACG,OAAO,EAAE;MACxB;MACArB,OAAO,CAACkB,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAACG,OAAO,CAAC;MACrE,OAAO,yDAAyD;IAClE,CAAC,MAAM;MACL;MACArB,OAAO,CAACkB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACI,OAAO,CAAC;MAC7D,OAAO,iDAAiD;IAC1D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}